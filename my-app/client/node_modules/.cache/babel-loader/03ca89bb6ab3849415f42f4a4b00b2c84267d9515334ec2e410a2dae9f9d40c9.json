{"ast":null,"code":"import{useState,useEffect}from\"react\";import{useNavigate,useParams}from\"react-router-dom\";import\"./LobbyPage.css\";import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function LobbyPage(){const{lobbyId}=useParams();const[players,setPlayers]=useState([]);const[timer,setTimer]=useState(15);const navigate=useNavigate();// Fetch players from backend\nuseEffect(()=>{const fetchPlayers=async()=>{if(lobbyId){try{const response=await axios.get(`http://localhost:5000/api/lobbies/${lobbyId}/players`);setPlayers(response.data.players);}catch(error){console.error('Error fetching players:',error);}}};fetchPlayers();},[lobbyId]);// Timer logic\nuseEffect(()=>{if(timer<=0){// Timer ended, update the backend game status\nconst startGame=async()=>{try{if(lobbyId){await axios.post(`http://localhost:5000/api/lobbies/${lobbyId}/start`);// Redirect each player to their respective scavenge screen\nnavigate(`/scavenge/${lobbyId}/userId`);// Replace \"userId\" dynamically\n}}catch(error){console.error('Error starting the game:',error);}};startGame();}else{// Countdown logic\nconst interval=setInterval(()=>{setTimer(prevTimer=>{if(prevTimer<=1){clearInterval(interval);return 0;}return prevTimer-1;});},1000);return()=>clearInterval(interval);}},[timer,navigate,lobbyId]);return/*#__PURE__*/_jsxs(\"div\",{className:\"lobby-background\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"lobby-spacer\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"lobby-header\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\"Players: \",players.length]}),/*#__PURE__*/_jsxs(\"h1\",{children:[\"Starts in: \",timer]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"lobby-players-grid\",children:players.map((player,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"lobby-player-box\",\"data-testid\":\"player-box\",children:player},index))})]});}","map":{"version":3,"names":["useState","useEffect","useNavigate","useParams","axios","jsx","_jsx","jsxs","_jsxs","LobbyPage","lobbyId","players","setPlayers","timer","setTimer","navigate","fetchPlayers","response","get","data","error","console","startGame","post","interval","setInterval","prevTimer","clearInterval","className","children","length","map","player","index"],"sources":["C:/Users/BroDu/OneDrive/Documents/GitHub/CSE-110-Team-2/my-app/client/src/pages/LobbyPage/LobbyPage.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport \"./LobbyPage.css\";\r\nimport axios from 'axios';\r\n\r\nexport default function LobbyPage() {\r\n    const { lobbyId } = useParams<{ lobbyId: string }>();\r\n    const [players, setPlayers] = useState<string[]>([]);\r\n    const [timer, setTimer] = useState(15);\r\n    const navigate = useNavigate();\r\n\r\n    // Fetch players from backend\r\n    useEffect(() => {\r\n        const fetchPlayers = async () => {\r\n            if (lobbyId) {\r\n                try {\r\n                    const response = await axios.get(`http://localhost:5000/api/lobbies/${lobbyId}/players`);\r\n                    setPlayers(response.data.players);\r\n                } catch (error) {\r\n                    console.error('Error fetching players:', error);\r\n                }\r\n            }\r\n        };\r\n        fetchPlayers();\r\n    }, [lobbyId]);\r\n\r\n    // Timer logic\r\n    useEffect(() => {\r\n        if (timer <= 0) {\r\n            // Timer ended, update the backend game status\r\n            const startGame = async () => {\r\n                try {\r\n                    if (lobbyId) {\r\n                        await axios.post(`http://localhost:5000/api/lobbies/${lobbyId}/start`);\r\n                        // Redirect each player to their respective scavenge screen\r\n                        navigate(`/scavenge/${lobbyId}/userId`);  // Replace \"userId\" dynamically\r\n                    }\r\n                } catch (error) {\r\n                    console.error('Error starting the game:', error);\r\n                }\r\n            };\r\n            startGame();\r\n        } else {\r\n            // Countdown logic\r\n            const interval = setInterval(() => {\r\n                setTimer((prevTimer) => {\r\n                    if (prevTimer <= 1) {\r\n                        clearInterval(interval);\r\n                        return 0;\r\n                    }\r\n                    return prevTimer - 1;\r\n                });\r\n            }, 1000);\r\n\r\n            return () => clearInterval(interval);\r\n        }\r\n    }, [timer, navigate, lobbyId]);\r\n\r\n    return (\r\n        <div className=\"lobby-background\">\r\n            <div className=\"lobby-spacer\"></div>\r\n            <div className=\"lobby-header\">\r\n                <h1>Players: {players.length}</h1>\r\n                <h1>Starts in: {timer}</h1>\r\n            </div>\r\n            <div className=\"lobby-players-grid\">\r\n                {players.map((player, index) => (\r\n                    <div key={index} className=\"lobby-player-box\" data-testid=\"player-box\">\r\n                        {player}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}