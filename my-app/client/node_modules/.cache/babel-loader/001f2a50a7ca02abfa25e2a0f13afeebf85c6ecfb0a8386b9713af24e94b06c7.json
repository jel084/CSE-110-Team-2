{"ast":null,"code":"import axios from'axios';export const API_BASE_URL=\"http://localhost:5000\";// Function to get all players from the backend. Method: GET\nexport const getPlayers=async()=>{const response=await fetch(`${API_BASE_URL}/players`);if(!response.ok){throw new Error(\"Failed to fetch players\");}let playerList=await response.json();return playerList.data;};// Function to get items for a player in a specific lobby. Method: GET\nexport const getItemsForPlayer=async(lobbyId,userId)=>{try{const response=await axios.get(`http://localhost:5000/api/lobbies/${lobbyId}/players/${userId}/items`);console.log(\"Fetched items from response:\",response.data);if(Array.isArray(response.data)){return response.data;}else{throw new Error('Unexpected response format');}}catch(error){console.error(\"Error fetching items:\",error);throw new Error('Could not fetch items');}};// Function to mark an item as found/unfound for a player in a lobby. Method: PUT\nexport const markItem=async(lobbyId,playerName,item)=>{try{await axios.put(`${API_BASE_URL}/lobbies/${lobbyId}/players/${playerName}/items/${item.id}`,{found:item.found,image:item.image});}catch(error){console.error('Error marking item:',error);throw new Error('Could not update item');}};","map":{"version":3,"names":["axios","API_BASE_URL","getPlayers","response","fetch","ok","Error","playerList","json","data","getItemsForPlayer","lobbyId","userId","get","console","log","Array","isArray","error","markItem","playerName","item","put","id","found","image"],"sources":["C:/Users/BroDu/OneDrive/Documents/GitHub/CSE-110-Team-2/my-app/client/src/player-utils.ts"],"sourcesContent":["\r\nimport { Player, Item } from \"./types/types\";\r\nimport axios from 'axios';\r\nexport const API_BASE_URL = \"http://localhost:5000\";\r\n\r\n// Function to get all players from the backend. Method: GET\r\nexport const getPlayers = async (): Promise<Player[]> => {\r\n\tconst response = await fetch(`${API_BASE_URL}/players`);\r\n\tif (!response.ok) {\r\n    \tthrow new Error(\"Failed to fetch players\");\r\n\t}\r\n\tlet playerList = await response.json();\r\n\treturn playerList.data;\r\n};\r\n\r\n// Function to get items for a player in a specific lobby. Method: GET\r\nexport const getItemsForPlayer = async (lobbyId: number, userId: string): Promise<Item[]> => {\r\n\ttry {\r\n\t  const response = await axios.get(`http://localhost:5000/api/lobbies/${lobbyId}/players/${userId}/items`);\r\n\t  console.log(\"Fetched items from response:\", response.data);\r\n\t  \r\n\t  if (Array.isArray(response.data)) {\r\n\t\treturn response.data as Item[];\r\n\t  } else {\r\n\t\tthrow new Error('Unexpected response format');\r\n\t  }\r\n\t} catch (error) {\r\n\t  console.error(\"Error fetching items:\", error);\r\n\t  throw new Error('Could not fetch items');\r\n\t}\r\n  };\r\n\r\n// Function to mark an item as found/unfound for a player in a lobby. Method: PUT\r\nexport const markItem = async (lobbyId: number, playerName: string, item: Item): Promise<void> => {\r\n\ttry {\r\n\t\tawait axios.put(`${API_BASE_URL}/lobbies/${lobbyId}/players/${playerName}/items/${item.id}`, {\r\n\t\t\tfound: item.found,\r\n\t\t\timage: item.image\r\n\t\t});\r\n\t} catch (error) {\r\n\t\tconsole.error('Error marking item:', error);\r\n\t\tthrow new Error('Could not update item');\r\n\t}\r\n};\r\n"],"mappings":"AAEA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,MAAM,CAAAC,YAAY,CAAG,uBAAuB,CAEnD;AACA,MAAO,MAAM,CAAAC,UAAU,CAAG,KAAAA,CAAA,GAA+B,CACxD,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGH,YAAY,UAAU,CAAC,CACvD,GAAI,CAACE,QAAQ,CAACE,EAAE,CAAE,CACd,KAAM,IAAI,CAAAC,KAAK,CAAC,yBAAyB,CAAC,CAC9C,CACA,GAAI,CAAAC,UAAU,CAAG,KAAM,CAAAJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CACtC,MAAO,CAAAD,UAAU,CAACE,IAAI,CACvB,CAAC,CAED;AACA,MAAO,MAAM,CAAAC,iBAAiB,CAAG,KAAAA,CAAOC,OAAe,CAAEC,MAAc,GAAsB,CAC5F,GAAI,CACF,KAAM,CAAAT,QAAQ,CAAG,KAAM,CAAAH,KAAK,CAACa,GAAG,CAAC,qCAAqCF,OAAO,YAAYC,MAAM,QAAQ,CAAC,CACxGE,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAEZ,QAAQ,CAACM,IAAI,CAAC,CAE1D,GAAIO,KAAK,CAACC,OAAO,CAACd,QAAQ,CAACM,IAAI,CAAC,CAAE,CACnC,MAAO,CAAAN,QAAQ,CAACM,IAAI,CACnB,CAAC,IAAM,CACR,KAAM,IAAI,CAAAH,KAAK,CAAC,4BAA4B,CAAC,CAC5C,CACF,CAAE,MAAOY,KAAK,CAAE,CACdJ,OAAO,CAACI,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAAC,CAC7C,KAAM,IAAI,CAAAZ,KAAK,CAAC,uBAAuB,CAAC,CAC1C,CACC,CAAC,CAEH;AACA,MAAO,MAAM,CAAAa,QAAQ,CAAG,KAAAA,CAAOR,OAAe,CAAES,UAAkB,CAAEC,IAAU,GAAoB,CACjG,GAAI,CACH,KAAM,CAAArB,KAAK,CAACsB,GAAG,CAAC,GAAGrB,YAAY,YAAYU,OAAO,YAAYS,UAAU,UAAUC,IAAI,CAACE,EAAE,EAAE,CAAE,CAC5FC,KAAK,CAAEH,IAAI,CAACG,KAAK,CACjBC,KAAK,CAAEJ,IAAI,CAACI,KACb,CAAC,CAAC,CACH,CAAE,MAAOP,KAAK,CAAE,CACfJ,OAAO,CAACI,KAAK,CAAC,qBAAqB,CAAEA,KAAK,CAAC,CAC3C,KAAM,IAAI,CAAAZ,KAAK,CAAC,uBAAuB,CAAC,CACzC,CACD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}