{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BroDu\\\\OneDrive\\\\Documents\\\\GitHub\\\\CSE-110-Team-2\\\\my-app\\\\client\\\\src\\\\pages\\\\LobbyPage\\\\LobbyPage.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport \"./LobbyPage.css\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LobbyPage() {\n  _s();\n  const {\n    lobbyId\n  } = useParams();\n  const [players, setPlayers] = useState([]);\n  const [timer, setTimer] = useState(15);\n  const navigate = useNavigate();\n\n  // Fetch players from backend\n  useEffect(() => {\n    const fetchPlayers = async () => {\n      if (lobbyId) {\n        try {\n          const response = await axios.get(`http://localhost:5000/api/lobbies/${lobbyId}/players`);\n          setPlayers(response.data.players);\n        } catch (error) {\n          console.error('Error fetching players:', error);\n        }\n      }\n    };\n    fetchPlayers();\n  }, [lobbyId]);\n\n  // Timer logic\n  useEffect(() => {\n    if (timer <= 0) {\n      // Timer ended, update the backend game status\n      const startGame = async () => {\n        try {\n          if (lobbyId) {\n            await axios.post(`http://localhost:5000/api/lobbies/${lobbyId}/start`);\n            // Redirect each player to their respective scavenge screen\n            navigate(`/scavenge/${lobbyId}/userId`); // Replace \"userId\" dynamically\n          }\n        } catch (error) {\n          console.error('Error starting the game:', error);\n        }\n      };\n      startGame();\n    } else {\n      // Countdown logic\n      const interval = setInterval(() => {\n        setTimer(prevTimer => {\n          if (prevTimer <= 1) {\n            clearInterval(interval);\n            return 0;\n          }\n          return prevTimer - 1;\n        });\n      }, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [timer, navigate, lobbyId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lobby-background\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lobby-spacer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lobby-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Players: \", players.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Starts in: \", timer]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lobby-players-grid\",\n      children: players.map((player, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lobby-player-box\",\n        \"data-testid\": \"player-box\",\n        children: player\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_s(LobbyPage, \"903tJheq2kqOGnAYI6ZhsWXKgdc=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = LobbyPage;\nvar _c;\n$RefreshReg$(_c, \"LobbyPage\");","map":{"version":3,"names":["useState","useEffect","useNavigate","useParams","axios","jsxDEV","_jsxDEV","LobbyPage","_s","lobbyId","players","setPlayers","timer","setTimer","navigate","fetchPlayers","response","get","data","error","console","startGame","post","interval","setInterval","prevTimer","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","player","index","_c","$RefreshReg$"],"sources":["C:/Users/BroDu/OneDrive/Documents/GitHub/CSE-110-Team-2/my-app/client/src/pages/LobbyPage/LobbyPage.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport \"./LobbyPage.css\";\r\nimport axios from 'axios';\r\n\r\nexport default function LobbyPage() {\r\n    const { lobbyId } = useParams<{ lobbyId: string }>();\r\n    const [players, setPlayers] = useState<string[]>([]);\r\n    const [timer, setTimer] = useState(15);\r\n    const navigate = useNavigate();\r\n\r\n    // Fetch players from backend\r\n    useEffect(() => {\r\n        const fetchPlayers = async () => {\r\n            if (lobbyId) {\r\n                try {\r\n                    const response = await axios.get(`http://localhost:5000/api/lobbies/${lobbyId}/players`);\r\n                    setPlayers(response.data.players);\r\n                } catch (error) {\r\n                    console.error('Error fetching players:', error);\r\n                }\r\n            }\r\n        };\r\n        fetchPlayers();\r\n    }, [lobbyId]);\r\n\r\n    // Timer logic\r\n    useEffect(() => {\r\n        if (timer <= 0) {\r\n            // Timer ended, update the backend game status\r\n            const startGame = async () => {\r\n                try {\r\n                    if (lobbyId) {\r\n                        await axios.post(`http://localhost:5000/api/lobbies/${lobbyId}/start`);\r\n                        // Redirect each player to their respective scavenge screen\r\n                        navigate(`/scavenge/${lobbyId}/userId`);  // Replace \"userId\" dynamically\r\n                    }\r\n                } catch (error) {\r\n                    console.error('Error starting the game:', error);\r\n                }\r\n            };\r\n            startGame();\r\n        } else {\r\n            // Countdown logic\r\n            const interval = setInterval(() => {\r\n                setTimer((prevTimer) => {\r\n                    if (prevTimer <= 1) {\r\n                        clearInterval(interval);\r\n                        return 0;\r\n                    }\r\n                    return prevTimer - 1;\r\n                });\r\n            }, 1000);\r\n\r\n            return () => clearInterval(interval);\r\n        }\r\n    }, [timer, navigate, lobbyId]);\r\n\r\n    return (\r\n        <div className=\"lobby-background\">\r\n            <div className=\"lobby-spacer\"></div>\r\n            <div className=\"lobby-header\">\r\n                <h1>Players: {players.length}</h1>\r\n                <h1>Starts in: {timer}</h1>\r\n            </div>\r\n            <div className=\"lobby-players-grid\">\r\n                {players.map((player, index) => (\r\n                    <div key={index} className=\"lobby-player-box\" data-testid=\"player-box\">\r\n                        {player}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}