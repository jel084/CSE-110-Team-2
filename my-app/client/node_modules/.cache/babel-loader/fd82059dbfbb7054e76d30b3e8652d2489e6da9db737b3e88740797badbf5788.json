{"ast":null,"code":"import React,{useState}from'react';import{useNavigate}from'react-router-dom';import'./PinPageStyle.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function PinPage(){const[lobbyCode,setLobbyCode]=useState('');const[userId,setUserId]=useState('');const[showError,setShowError]=useState(false);const[showSuccess,setShowSuccess]=useState(false);const[lobbyId,setLobbyId]=useState(null);const navigate=useNavigate();const handleLobbyCodeChange=e=>{const input=e.target.value;const numericInput=input.replace(/\\D/g,'').slice(0,4);setLobbyCode(numericInput);};const handleUserIdChange=e=>{setUserId(e.target.value);};const handleJoinGame=async()=>{if(!userId||!lobbyCode){setShowError(true);return;}try{const response=await fetch('http://localhost:5000/api/join',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({lobbyId:1,// For now, let's assume the lobby ID is 1, dynamically set if needed\nuserId:userId,pin:lobbyCode})});const data=await response.json();if(response.ok){setShowError(false);setLobbyId(data.lobbyId);// Set the lobbyId from the backend response\nsetShowSuccess(true);// Redirect to the lobby page using the correct lobby ID\nif(data.lobbyId){navigate(`/lobby/${data.lobbyId}`);}}else{setShowError(true);console.error(data.error);}}catch(error){setShowError(true);console.error('Error joining the game:',error);}};const handleCloseError=()=>{setShowError(false);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"spacer\",children:showSuccess&&/*#__PURE__*/_jsx(\"div\",{className:\"success-popup\",children:/*#__PURE__*/_jsx(\"div\",{className:\"success-popup-content\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Successfully joined the lobby!\"})})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"pin-page\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Enter Lobby Code\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"input-box\",value:lobbyCode,onChange:handleLobbyCodeChange,placeholder:\"Lobby PIN\",maxLength:4}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"input-box\",value:userId,onChange:handleUserIdChange,placeholder:\"Player Name\"})]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"start-game-button\",onClick:handleJoinGame,children:\"Join Game\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"spacer2\"}),showError&&/*#__PURE__*/_jsx(\"div\",{className:\"error-popup\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"error-popup-content\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Error: Invalid Lobby Code or User ID\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleCloseError,children:\"OK\"})]})})]});}export default PinPage;","map":{"version":3,"names":["React","useState","useNavigate","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","PinPage","lobbyCode","setLobbyCode","userId","setUserId","showError","setShowError","showSuccess","setShowSuccess","lobbyId","setLobbyId","navigate","handleLobbyCodeChange","e","input","target","value","numericInput","replace","slice","handleUserIdChange","handleJoinGame","response","fetch","method","headers","body","JSON","stringify","pin","data","json","ok","console","error","handleCloseError","children","className","type","onChange","placeholder","maxLength","onClick"],"sources":["C:/Users/BroDu/OneDrive/Documents/GitHub/CSE-110-Team-2/my-app/client/src/pages/PinPage/PinPage.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './PinPageStyle.css';\r\n\r\nfunction PinPage() {\r\n  const [lobbyCode, setLobbyCode] = useState('');\r\n  const [userId, setUserId] = useState('');\r\n  const [showError, setShowError] = useState(false);\r\n  const [showSuccess, setShowSuccess] = useState(false);\r\n  const [lobbyId, setLobbyId] = useState<number | null>(null);\r\n  const navigate = useNavigate();\r\n\r\n  const handleLobbyCodeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const input = e.target.value;\r\n    const numericInput = input.replace(/\\D/g, '').slice(0, 4);\r\n    setLobbyCode(numericInput);\r\n  };\r\n\r\n  const handleUserIdChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setUserId(e.target.value);\r\n  };\r\n\r\n  const handleJoinGame = async () => {\r\n    if (!userId || !lobbyCode) {\r\n      setShowError(true);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/join', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          lobbyId: 1,  // For now, let's assume the lobby ID is 1, dynamically set if needed\r\n          userId: userId,\r\n          pin: lobbyCode,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        setShowError(false);\r\n        setLobbyId(data.lobbyId);  // Set the lobbyId from the backend response\r\n        setShowSuccess(true);\r\n\r\n        // Redirect to the lobby page using the correct lobby ID\r\n        if (data.lobbyId) {\r\n          navigate(`/lobby/${data.lobbyId}`);\r\n        }\r\n      } else {\r\n        setShowError(true);\r\n        console.error(data.error);\r\n      }\r\n    } catch (error) {\r\n      setShowError(true);\r\n      console.error('Error joining the game:', error);\r\n    }\r\n  };\r\n\r\n  const handleCloseError = () => {\r\n    setShowError(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"spacer\">\r\n        {showSuccess && (\r\n          <div className=\"success-popup\">\r\n            <div className=\"success-popup-content\">\r\n              <p>Successfully joined the lobby!</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"pin-page\">\r\n        <header className=\"header\">\r\n          <h1>Enter Lobby Code</h1>\r\n          <div className=\"input-container\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"input-box\"\r\n              value={lobbyCode}\r\n              onChange={handleLobbyCodeChange}\r\n              placeholder=\"Lobby PIN\"\r\n              maxLength={4}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              className=\"input-box\"\r\n              value={userId}\r\n              onChange={handleUserIdChange}\r\n              placeholder=\"Player Name\"\r\n            />\r\n          </div>\r\n        </header>\r\n        <button className=\"start-game-button\" onClick={handleJoinGame}>\r\n          Join Game\r\n        </button>\r\n      </div>\r\n      <div className=\"spacer2\"></div>\r\n\r\n      {showError && (\r\n        <div className=\"error-popup\">\r\n          <div className=\"error-popup-content\">\r\n            <p>Error: Invalid Lobby Code or User ID</p>\r\n            <button onClick={handleCloseError}>OK</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PinPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}