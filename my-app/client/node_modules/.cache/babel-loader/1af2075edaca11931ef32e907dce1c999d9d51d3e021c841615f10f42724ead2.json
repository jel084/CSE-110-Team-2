{"ast":null,"code":"import axios from 'axios';\nexport const API_BASE_URL = \"http://localhost:5000\";\n\n// Function to get all players from the backend. Method: GET\nexport const getPlayers = async () => {\n  const response = await fetch(`${API_BASE_URL}/players`);\n  if (!response.ok) {\n    throw new Error(\"Failed to fetch players\");\n  }\n  let playerList = await response.json();\n  return playerList.data;\n};\n\n// Function to get items for a player in a specific lobby. Method: GET\nexport const getItemsForPlayer = async (lobbyId, userId) => {\n  try {\n    const response = await axios.get(`http://localhost:5000/api/lobbies/${lobbyId}/players/${userId}/items`);\n    console.log(\"Fetched items from response:\", response.data);\n    if (Array.isArray(response.data)) {\n      return response.data;\n    } else {\n      throw new Error('Unexpected response format');\n    }\n  } catch (error) {\n    console.error(\"Error fetching items:\", error);\n    throw new Error('Could not fetch items');\n  }\n};\n\n// Function to mark an item as found/unfound for a player in a lobby. Method: PUT\nexport const markItem = async (lobbyId, playerName, item) => {\n  try {\n    await axios.put(`${API_BASE_URL}/lobbies/${lobbyId}/players/${playerName}/items/${item.id}`, {\n      found: item.found,\n      image: item.image\n    });\n  } catch (error) {\n    console.error('Error marking item:', error);\n    throw new Error('Could not update item');\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","getPlayers","response","fetch","ok","Error","playerList","json","data","getItemsForPlayer","lobbyId","userId","get","console","log","Array","isArray","error","markItem","playerName","item","put","id","found","image"],"sources":["C:/Users/BroDu/OneDrive/Documents/GitHub/CSE-110-Team-2/my-app/client/src/player-utils.ts"],"sourcesContent":["\r\nimport { Player, Item } from \"./types/types\";\r\nimport axios from 'axios';\r\nexport const API_BASE_URL = \"http://localhost:5000\";\r\n\r\n// Function to get all players from the backend. Method: GET\r\nexport const getPlayers = async (): Promise<Player[]> => {\r\n\tconst response = await fetch(`${API_BASE_URL}/players`);\r\n\tif (!response.ok) {\r\n    \tthrow new Error(\"Failed to fetch players\");\r\n\t}\r\n\tlet playerList = await response.json();\r\n\treturn playerList.data;\r\n};\r\n\r\n// Function to get items for a player in a specific lobby. Method: GET\r\nexport const getItemsForPlayer = async (lobbyId: number, userId: string): Promise<Item[]> => {\r\n\ttry {\r\n\t  const response = await axios.get(`http://localhost:5000/api/lobbies/${lobbyId}/players/${userId}/items`);\r\n\t  console.log(\"Fetched items from response:\", response.data);\r\n\t  \r\n\t  if (Array.isArray(response.data)) {\r\n\t\treturn response.data as Item[];\r\n\t  } else {\r\n\t\tthrow new Error('Unexpected response format');\r\n\t  }\r\n\t} catch (error) {\r\n\t  console.error(\"Error fetching items:\", error);\r\n\t  throw new Error('Could not fetch items');\r\n\t}\r\n  };\r\n\r\n// Function to mark an item as found/unfound for a player in a lobby. Method: PUT\r\nexport const markItem = async (lobbyId: number, playerName: string, item: Item): Promise<void> => {\r\n\ttry {\r\n\t\tawait axios.put(`${API_BASE_URL}/lobbies/${lobbyId}/players/${playerName}/items/${item.id}`, {\r\n\t\t\tfound: item.found,\r\n\t\t\timage: item.image\r\n\t\t});\r\n\t} catch (error) {\r\n\t\tconsole.error('Error marking item:', error);\r\n\t\tthrow new Error('Could not update item');\r\n\t}\r\n};\r\n"],"mappings":"AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,MAAMC,YAAY,GAAG,uBAAuB;;AAEnD;AACA,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAA+B;EACxD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,YAAY,UAAU,CAAC;EACvD,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC9C;EACA,IAAIC,UAAU,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;EACtC,OAAOD,UAAU,CAACE,IAAI;AACvB,CAAC;;AAED;AACA,OAAO,MAAMC,iBAAiB,GAAG,MAAAA,CAAOC,OAAe,EAAEC,MAAc,KAAsB;EAC5F,IAAI;IACF,MAAMT,QAAQ,GAAG,MAAMH,KAAK,CAACa,GAAG,CAAC,qCAAqCF,OAAO,YAAYC,MAAM,QAAQ,CAAC;IACxGE,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEZ,QAAQ,CAACM,IAAI,CAAC;IAE1D,IAAIO,KAAK,CAACC,OAAO,CAACd,QAAQ,CAACM,IAAI,CAAC,EAAE;MACnC,OAAON,QAAQ,CAACM,IAAI;IACnB,CAAC,MAAM;MACR,MAAM,IAAIH,KAAK,CAAC,4BAA4B,CAAC;IAC5C;EACF,CAAC,CAAC,OAAOY,KAAK,EAAE;IACdJ,OAAO,CAACI,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAM,IAAIZ,KAAK,CAAC,uBAAuB,CAAC;EAC1C;AACC,CAAC;;AAEH;AACA,OAAO,MAAMa,QAAQ,GAAG,MAAAA,CAAOR,OAAe,EAAES,UAAkB,EAAEC,IAAU,KAAoB;EACjG,IAAI;IACH,MAAMrB,KAAK,CAACsB,GAAG,CAAC,GAAGrB,YAAY,YAAYU,OAAO,YAAYS,UAAU,UAAUC,IAAI,CAACE,EAAE,EAAE,EAAE;MAC5FC,KAAK,EAAEH,IAAI,CAACG,KAAK;MACjBC,KAAK,EAAEJ,IAAI,CAACI;IACb,CAAC,CAAC;EACH,CAAC,CAAC,OAAOP,KAAK,EAAE;IACfJ,OAAO,CAACI,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC3C,MAAM,IAAIZ,KAAK,CAAC,uBAAuB,CAAC;EACzC;AACD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}